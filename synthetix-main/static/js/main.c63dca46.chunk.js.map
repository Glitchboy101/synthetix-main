{"version":3,"sources":["whitelist/merkle-tree.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","fonts/Koulen-Regular.ttf","fonts/NotoSans-Black.ttf","nav/nav.js","App.js","reportWebVitals.js","index.js"],"names":["ethers","require","keccak256","MerkleTree","addresses","hashAccount","userAddress","Buffer","from","utils","solidityKeccak256","slice","generateMerkleTree","map","sortPairs","generateMerkleProof","getHexProof","finalMerkleTree","console","log","getHexRoot","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","wlsupplyLimit","price","wlMintCount","wlmaxLimitPerWallet","wlmaxMintAmountPerTx","publicWalletLimit","publicTxLimit","publicMintCount","publicPrice","publicSupplyLimit","saleStatus","publicSaleStaus","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","fetch","headers","Accept","configResponse","json","getState","methods","call","wlprice","whitelistSale","maxLimitPerWallet","maxMintAmountPerTx","supplyLimit","publicSale","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","rpc","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","Container","flex","fd","jc","ai","test","Container2","TextTitle","p","TextDescription","Navigation","className","target","href","Twitter","icon","faTwitter","Mail_Page","faEnvelope","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledImg","img","StyledLink","StyledLink2","App","input","len","React","useState","useDispatch","useSelector","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","CONFIG","SET_CONFIG","getData","getConfig","config","useEffect","style","padding","backgroundColor","margin","alt","src","Number","textAlign","fontFamily","color","fontSize","position","fontWeight","CONTENT","onClick","e","preventDefault","ethereum","window","abiResponse","abi","localStorage","removeItem","web3Modal","Web3Modal","network","cacheProvider","connect","provider","Web3","Web3EthContract","setProvider","eth","getAccounts","accounts","request","method","networkId","params","chainId","toHex","SmartContractObj","on","location","reload","message","includes","String","length","substring","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","totalGasLimit","merkleProof","WLSummon","send","maxPriorityFeePerGas","maxFeePerGas","to","value","once","err","then","receipt","claimNFTs","PublicSummon","PublicclaimNFTs","width","LINKTREE","faHeart","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c63dca46.chunk.js","sourcesContent":["const { ethers } = require('ethers');\r\nconst keccak256 = require('keccak256');\r\nconst { MerkleTree } = require('merkletreejs');\r\nconst addresses = require('./addresses.json');\r\n\r\nfunction hashAccount(userAddress) {\r\n    return Buffer.from(\r\n        ethers.utils.solidityKeccak256(\r\n            ['address'], [userAddress]\r\n        ).slice(2),\r\n        'hex'\r\n    )\r\n}\r\n\r\nfunction generateMerkleTree(addresses) {\r\n    const merkleTree = new MerkleTree(\r\n        addresses.map(hashAccount),\r\n        keccak256, { sortPairs: true }\r\n    )\r\n\r\n    return merkleTree;\r\n}\r\n\r\nexport function generateMerkleProof(userAddress) {\r\n    const merkleTree = generateMerkleTree(addresses);\r\n    const proof = merkleTree.getHexProof(\r\n        hashAccount(userAddress)\r\n    );\r\n\r\n    return proof;\r\n}\r\n\r\nconst finalMerkleTree = generateMerkleTree(addresses);\r\nconsole.log(finalMerkleTree.getHexRoot());\r\n","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  wlsupplyLimit: 1,\n  price: 0,\n  wlMintCount: 0,\n  wlmaxLimitPerWallet: 1,\n  wlmaxMintAmountPerTx: 1,\n publicWalletLimit: 1,\n  publicTxLimit: 1,\n  publicMintCount: 0,\n  publicPrice: 0,\n  publicSupplyLimit: 1,\n  saleStatus: false,\n  publicSaleStaus: false,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        cost: action.payload.price,\n        wlsupplyLimit: action.payload.wlsupplyLimit,\n        price: action.payload.price,\n        wlMintCount: action.payload.wlMintCount,\n        wlmaxLimitPerWallet: action.payload.wlmaxLimitPerWallet,\n        saleStatus: action.payload.saleStatus,\n        wlmaxMintAmountPerTx: action.payload.wlmaxMintAmountPerTx,\n        publicWalletLimit: action.payload.publicWalletLimit,\n        publicTxLimit: action.payload.publicTxLimit,\n        publicMintCount: action.payload.publicMintCount,\n        publicPrice: action.payload.publicPrice,\n        publicSupplyLimit: action.payload.publicSupplyLimit,\n        publicSaleStaus: action.payload.publicSaleStaus,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let price = await store\n        .getState()\n        .blockchain.smartContract.methods.wlprice()\n        .call();\n      \n      let account = await store\n        .getState()\n        .blockchain.account;\n      let wlMintCount = await store\n        .getState()\n        .blockchain.smartContract.methods.wlMintCount(account)\n        .call();\n      let saleStatus = await store\n        .getState()\n        .blockchain.smartContract.methods.whitelistSale()\n        .call();\n      let wlsupplyLimit = await store\n        .getState()\n        .blockchain.smartContract.methods.wlsupplyLimit()\n        .call();\n      let wlmaxLimitPerWallet = await store\n        .getState()\n        .blockchain.smartContract.methods.wlmaxLimitPerWallet()\n        .call();\n      let wlmaxMintAmountPerTx = await store\n        .getState()\n        .blockchain.smartContract.methods.wlmaxMintAmountPerTx()\n        .call();\n\n      // public\n      let publicWalletLimit = await store\n        .getState()\n        .blockchain.smartContract.methods.maxLimitPerWallet()\n        .call();\n\n      let publicTxLimit = await store\n        .getState()\n        .blockchain.smartContract.methods.maxMintAmountPerTx()\n        .call();\n\n      let publicMintCount = await store\n        .getState()\n        .blockchain.smartContract.methods.publicMintCount(account)\n        .call();\n\n      let publicPrice = await store\n        .getState()\n        .blockchain.smartContract.methods.price()\n        .call();\n\n      let publicSupplyLimit = await store\n        .getState()\n        .blockchain.smartContract.methods.supplyLimit()\n        .call();\n\n      let publicSaleStaus = await store \n        .getState()\n        .blockchain.smartContract.methods.publicSale()\n        .call();\n\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          wlsupplyLimit,\n          price,\n          wlMintCount,\n          wlmaxLimitPerWallet,\n          saleStatus,\n          wlmaxMintAmountPerTx,\n          publicWalletLimit,\n          publicTxLimit,\n          publicMintCount,\n          publicPrice,\n          publicSupplyLimit,\n          publicSaleStaus\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst INFURA_ID = \"dd180a507dde4ee39ebdd330fce06ff6\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider, // required\n    options: {\n      infuraId: INFURA_ID, // required\n      rpc: {\n        5: \"https://goerli.infura.io/v3/dd180a507dde4ee39ebdd330fce06ff6\" // network rpc\n      },\n    },\n  },\n \n  \n};\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  const {ethereum} =window;\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    try {\n      const abiResponse = await fetch(\"/config/abi.json\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const abi = await abiResponse.json();\n\n      //\n\n      const configResponse = await fetch(\"/config/config.json\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const CONFIG = await configResponse.json();\n      localStorage.removeItem(\"walletconnect\");\n      localStorage.removeItem(\"WALLETCONNECT_DEEPLINK_CHOICE\");\n      const web3Modal = new Web3Modal({\n        network: \"mainnet\", // optional\n        cacheProvider: false, // optional\n        providerOptions, // required\n      });\n      const provider = await web3Modal.connect();\n      const web3 = new Web3(provider);\n      console.log(\"web\", web3);\n\n      Web3EthContract.setProvider(provider);\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await provider.request({\n        method: \"net_version\",\n      });\n      console.log(\"networkId\", networkId);\n      if (networkId != CONFIG.NETWORK.ID) {\n        await ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: Web3.utils.toHex(CONFIG.NETWORK.ID) }],\n        });\n      }\n\n      if (networkId == CONFIG.NETWORK.ID) {\n        const SmartContractObj = new Web3EthContract(\n          abi,\n          CONFIG.CONTRACT_ADDRESS\n        );\n\n\n\n        \n        dispatch(\n          connectSuccess({\n            account: accounts[0],\n            smartContract: SmartContractObj,\n            web3: web3,\n          })\n        );\n        // Add listeners start\n        provider.on(\"accountsChanged\", (accounts) => {\n          dispatch(updateAccount(accounts[0]));\n        });\n        provider.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        // Add listeners end\n      } else {\n        dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n      }\n    } catch (err) {\n      console.log(\"error\", err, \" message\", err.message);\n      if (\n        typeof err !== \"undefined\" &&\n        typeof err.message !== \"undefined\" &&\n        err.message.includes(\"User Rejected\")\n      ) {\n        dispatch(connectFailed(\"User rejected the request\"));\n      } else if (\n        (typeof err === \"string\" || err instanceof String) &&\n        err.includes(\"Modal closed by user\")\n      ) {\n        dispatch(connectFailed(\"Modal closed by user\"));\n      } else {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  height: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  \n`;\n\nexport const Container2 = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  \n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/Koulen-Regular.e23002c6.ttf\";","export default __webpack_public_path__ + \"static/media/NotoSans-Black.4a2324b5.ttf\";","import React, { useEffect, useState, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './nav.css'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\r\nimport {Twitter} from './link.json'\r\nimport {Discord} from './link.json'\r\nimport {Mail_Page} from './link.json'\r\n\r\n\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <section className='Nav'>\r\n        <div className=\"Navbar\">\r\n          <ul className='Menu'>\r\n\r\n\r\n            <li className='Menu-item'><a target={'_blank'} href={Twitter}><FontAwesomeIcon icon={faTwitter} /></a></li>\r\n                       <li className='Menu-item'><a href={Mail_Page}> <FontAwesomeIcon icon={faEnvelope} /></a></li>\r\n          </ul>\r\n          \r\n        </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Navigation","import React, { useEffect, useState, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { connect } from './redux/blockchain/blockchainActions'\nimport { fetchData } from './redux/data/dataActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport * as s from './styles/globalStyles'\nimport styled from 'styled-components'\nimport './fonts/Koulen-Regular.ttf'\nimport './fonts/NotoSans-Black.ttf'\nimport './fonts/fonts.css'\nimport { generateMerkleProof } from './whitelist/merkle-tree'\nimport Navigation from './nav/nav.js';\n\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input\n\nexport const StyledButton = styled.button`\n  padding: 15px;\n  border-radius: 10px;\n  border: none;\n  background-color: var(--button-color);\n  padding: 15px;\n  font-weight: bold;\n  color: var(--button-text);\n  width: 135px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--button-color);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--button-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`\n\nexport const StyledImg = styled.img`\n  background-color: var(--accent);\n  width: 250px;\n  float: left;\n  @media (min-width: 900px) {\n    width: 350px;\n  }\n  @media (min-width: 1000px) {\n    width: 400px;\n  }\n  @media (min-width: 2000px) {\n    width: 550px;\n  }\n  @media (min-width: 3540px) {\n    width: 750px;\n  }\n\n  transition: width 0.5s;\n`\n\nexport const StyledLink = styled.a`\n  color: var(--scanlink);\n  text-decoration: none;\n`\n\nexport const StyledLink2 = styled.a`\n  color: var(--down-color);\n  text-decoration: none;\n`\n\n\nfunction App() {\n  let [over, setOver] = React.useState(false);\n\n  let titlestyle = {\n    color: '',\n\n  }\n\n  const dispatch = useDispatch()\n  const blockchain = useSelector((state) => state.blockchain)\n  const data = useSelector((state) => state.data)\n  const [claimingNft, setClaimingNft] = useState(false)\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`)\n  const [mintAmount, setMintAmount] = useState(1)\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: '',\n    SCAN_LINK: '',\n    NETWORK: {\n      NAME: '',\n      SYMBOL: '',\n      ID: 0,\n    },\n    NFT_NAME: '',\n    SYMBOL: '',\n    GAS_LIMIT: 0,\n    MARKETPLACE: '',\n    MARKETPLACE_LINK: '',\n  })\n\n  const claimNFTs = () => {\n    let cost = (data.cost)\n    let gasLimit = CONFIG.GAS_LIMIT\n    let totalCostWei = String((data.price) * mintAmount)\n    let totalGasLimit = String(gasLimit)\n    console.log('Cost: ', totalCostWei)\n    console.log('Gas limit: ', totalGasLimit)\n    console.log(cost)\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`)\n    setClaimingNft(true)\n    const merkleProof = generateMerkleProof(blockchain.account);\n    blockchain.smartContract.methods\n      .WLSummon(mintAmount, merkleProof)\n      .send({\n        gasLimit: String(totalGasLimit),\n        maxPriorityFeePerGas: null,\n        maxFeePerGas: null,\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once('error', (err) => {\n        console.log(err)\n        setFeedback('Sorry, something went wrong please try again later.')\n        setClaimingNft(false)\n      })\n      .then((receipt) => {\n        console.log(receipt)\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit ${CONFIG.MARKETPLACE} to view it.`,\n        )\n        setClaimingNft(false)\n        dispatch(fetchData(blockchain.account))\n      })\n  }\n\n  const PublicclaimNFTs = () => {\n    let cost = (data.publicPrice)\n    let gasLimit = CONFIG.GAS_LIMIT\n    let totalCostWei = String((data.publicPrice) * mintAmount)\n    let totalGasLimit = String(gasLimit)\n    console.log('Cost: ', totalCostWei)\n    console.log('Gas limit: ', totalGasLimit)\n    console.log(cost)\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`)\n    setClaimingNft(true)\n    blockchain.smartContract.methods\n      .PublicSummon(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        maxPriorityFeePerGas: null,\n        maxFeePerGas: null,\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once('error', (err) => {\n        console.log(err)\n        setFeedback('Sorry, something went wrong please try again later.')\n        setClaimingNft(false)\n      })\n      .then((receipt) => {\n        console.log(receipt)\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit ${CONFIG.MARKETPLACE} to view it.`,\n        )\n        setClaimingNft(false)\n        dispatch(fetchData(blockchain.account))\n      })\n  }\n\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1\n    if (newMintAmount < 1) {\n      newMintAmount = 1\n    }\n    setMintAmount(newMintAmount)\n  }\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1\n    if (newMintAmount > Number(data.wlmaxMintAmountPerTx)) {\n      newMintAmount = Number(data.wlmaxMintAmountPerTx)\n    }\n    setMintAmount(newMintAmount)\n  }\n\n  const getData = () => {\n    if (blockchain.account !== '' && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account))\n    }\n  }\n\n  const getConfig = async () => {\n    const configResponse = await fetch('/config/config.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n    const config = await configResponse.json()\n    SET_CONFIG(config)\n  }\n\n  useEffect(() => {\n    getConfig()\n  }, [])\n\n  useEffect(() => {\n    getData((data.cost))\n  }, [blockchain.account])\n\n  var ethcost = (data.price) / 1000000000000000000;\n\n  var ethcost2 = (data.publicPrice) / 1000000000000000000;\n\n  var priceShow = \"0.049 per summon, 1 per wallet!\"\n\n\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={'center'}\n        style={{\n          padding: 24, backgroundColor: 'var(--primary)'\n        }}\n        image={\"/config/images/bg.png\"}\n      >\n        <Navigation />\n        <ResponsiveWrapper flex={1} style={{ padding: 24, margin: 50 }} test>\n          <s.Container flex={1} jc={'center'} ai={'center'}>\n            <StyledImg alt={'example'} src={'/config/images/sample.gif'} jc={'center'} ai={'center'}>\n\n            </StyledImg>\n          </s.Container>\n          <s.Container2\n            flex={1}\n            jc={'center'}\n            ai={'center'}\n            style={{\n              backgroundColor: 'var(--background)',\n              padding: 24,\n            }}\n          >\n            {' '}\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= data.wlsupplyLimit ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: 'center', fontFamily: 'KoulenRegular', color: 'var(--accent-text)', fontSize: 50 }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: 'center', fontFamily: 'KoulenRegular', color: 'var(--accent-text)', fontSize: 25 }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={'_blank'} style={{ fontFamily: 'KoulenRegular', fontSize: 35 }} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.SpacerSmall />\n                {blockchain.account === '' ||\n                  blockchain.smartContract === null ? (\n                  <s.Container ai={'center'} jc={'center'}>\n                    <s.TextTitle\n                      style={{\n                        position: 'center',\n                        textAlign: 'center',\n                        fontSize: 50,\n                        fontWeight: 'bold',\n                        fontFamily: 'KoulenRegular',\n                        color: 'var(--accent-text)',\n                      }}\n                    >\n                      Summon your CyberTokyo: Genesis!\n                    </s.TextTitle>\n                    <s.TextTitle\n                      style={{\n                        fontFamily: 'KoulenRegular',\n                        position: 'center',\n                        textAlign: 'justify',\n                        fontSize: 20,\n                        fontWeight: 'normal',\n                        color: 'var(--accent-text)',\n                      }}\n                    >\n                      {CONFIG.CONTENT}\n                    </s.TextTitle>\n                    <s.TextDescription\n                      style={{\n\n                        textAlign: 'center',\n                        color: 'var(--scanlink)',\n                        fontSize: 20,\n                        fontWeight: 'bold',\n                        fontFamily: 'KoulenRegular',\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network to mint\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault()\n                        dispatch(connect())\n                        getData()\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== '' ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: 'center',\n                            color: 'var(--accent-text)',\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextTitle\n                      style={{\n                        position: 'center',\n                        textAlign: 'center',\n                        fontSize: 50,\n                        fontWeight: 'bold',\n                        fontFamily: 'KoulenRegular',\n                        color: 'var(--accent-text)',\n                      }}\n                    >\n                      Currently summoned - {data.totalSupply}\n                    </s.TextTitle>\n                    <s.TextTitle\n                      style={{\n                        fontFamily: 'KoulenRegular',\n                        position: 'center',\n                        textAlign: 'center',\n                        fontSize: 20,\n                        fontWeight: 'bold',\n                        color: 'var(--accent-text)',\n                      }}\n                    >\n                      Only {data.wlsupplyLimit} supply!\n                    </s.TextTitle>\n                    <s.TextDescription\n                      style={{\n                        textAlign: 'center',\n                        color: 'var(--primary-text)',\n                      }}\n                    >\n                      <StyledLink target={'_blank'} style={{ fontFamily: 'KoulenRegular', }} href={CONFIG.SCAN_LINK}>\n                        You can also mint directly from Scan {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n                      </StyledLink>\n                    </s.TextDescription>\n\n\n                    <s.TextDescription\n                      style={{\n                        textAlign: 'center',\n                        color: 'var(--accent-text)',\n                        fontFamily: 'KoulenRegular'\n                      }}\n                    >\n\n                      <s.TextTitle\n                        style={{ textAlign: 'center', fontFamily: 'KoulenRegular', color: 'var(--accent-text)' }}\n                      >\n                        {priceShow}\n                      </s.TextTitle>\n\n                      <s.SpacerXSmall />\n                      <s.TextDescription\n                        style={{ textAlign: 'center', fontFamily: 'KoulenRegular', color: 'var(--accent-text)' }}\n                      >\n                        Excluding gas fees.\n                      </s.TextDescription>\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={'center'} jc={'center'} fd={'row'}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4, fontFamily: 'KoulenRegular' }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault()\n                          decrementMintAmount()\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: 'center',\n                          color: 'var(--accent-text)',\n                          fontFamily: 'KoulenRegular'\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault()\n                          incrementMintAmount()\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={'center'} jc={'center'} fd={'row'}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault()\n                          if ((data.saleStatus) == true) {\n                            const merkleProof = generateMerkleProof(blockchain.account);\n                            if (merkleProof.length > 0) {\n                              if (((Number(data.wlMintCount)) + mintAmount) <= (Number(data.wlmaxLimitPerWallet))) {\n                                claimNFTs()\n                              }\n                              else {\n                                setFeedback('Max Mint Limit Reached or Minting more than allowed!')\n                              }\n                            }\n                            else {\n                              setFeedback('Not whitelisted!')\n                            }\n                          }\n                          else if ((data.publicSaleStaus) == true) {\n                            if (((Number(data.publicMintCount)) + mintAmount) <= (Number(data.publicWalletLimit))) {\n                              PublicclaimNFTs()\n                            }\n                            else {\n                              setFeedback('Max Mint Limit Reached or Minting more than allowed!')\n                            }\n                          }\n                          else {\n                            setFeedback('Sale Not Active')\n                          }\n                          getData()\n                        }}\n                      >\n                        {claimingNft ? 'BUSY' : 'Summon with ETH'}\n                      </StyledButton>\n\n                         </s.Container>\n                    <s.SpacerSmall></s.SpacerSmall>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container2>\n\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={'center'} ai={'center'} style={{ width: '70%' }}>\n          <s.TextDescription\n            href={CONFIG.LINKTREE} target={'_blank'}\n            style={{\n              textAlign: 'center',\n              color: 'var(--down-color)',\n              fontFamily: 'KoulenRegular',\n            }}\n          >\n            <StyledLink2 href={CONFIG.LINKTREE} target={'_blank'} >\n              2022 all rights reserved {CONFIG.NFT_NAME} | Created with <FontAwesomeIcon icon={faHeart} /> by SnowStudios</StyledLink2>\n          </s.TextDescription>\n          <s.SpacerSmall />\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  )\n}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}